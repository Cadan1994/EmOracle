
select DISTINCT CADAN_RETCOMPRADOR(A.SEQFAMILIA) AS COMPRADOR,
                CADAN_RETCATEGORIA(A.SEQFAMILIA, 1) AS CAT_NIVEL1,
                CADAN_RETCATEGORIA(A.SEQFAMILIA, 2) AS CAT_NIVEL2,
                CADAN_RETCATEGORIA(A.SEQFAMILIA, 3) AS CAT_NIVEL3,
                A.SEQFAMILIA,
                CADAN_EMBATIVAVD(A.SEQPRODUTO) AS EMBVENDA,
                CADAN_RETESTOQUE(A.SEQPRODUTO) AS ESTOQUE,
                A.SEQPRODUTO,
                A.DESCCOMPLETA,
                

                
                sum(round((V.QTDITEM - V.QTDDEVOLITEM) / K.QTDEMBALAGEM, 6) *
                    (nvl(a.propqtdprodutobase, 1))) as QUANTIDADE,
                
                sum(round((V.QTDITEM - V.QTDDEVOLITEM), 6)) as QUANTIDADEUNIT,
                count(distinct V.SEQPRODUTO) as NROITENS,
                
                count(distinct V.SEQPESSOA) as NROCLIENTES,
                sum((round(V.VLRITEM, 2) - VLRICMSST - VLRFCPST) -
                    (round(V.VLRDEVOLITEM, 2) -
                    (0 + VLRDEVOLICMSST + DVLRFCPST))) as VLRVENDA,
                V.nrorepresentante

/*           
, to_number( null ) as SEQLINHA, 

A.SEQPRODUTO as SEQDETALHE1,
null as CODDETALHE1,
A.DESCCOMPLETA as NOMEDETALHE1,
A.SEQPRODUTO as SEQDETALHE2,
null as CODDETALHE2,
A.DESCCOMPLETA as NOMEDETALHE2,
A.DESCCOMPLETA as NOMEDETALHE,
null as NIVELHIERARQUIA,
null as ACTFAMILIA,
to_number( null ) as SEQCATEGORIAPAI,
K.QTDEMBALAGEM as QTDEMBALAGEM,
K.EMBALAGEM || ' ' || K.QTDEMBALAGEM as EMBALAGEM,
K.LITROS as LITROS,
null as STATUSCOMPRA,
null as STATUSVENDA ,

null
as SEQPESSOA,

null
as NOMERAZAO,

null
as nromatricula,

MAX(V.INDPOSICAOCATEG)
as INDPOSICAOCATEG,


 to_number( null ) 
as QTDDESCTOPROMOCPDV,

null
as LITRAGEM,

null
as SEQLOTEESTOQUE,

count( distinct V.ROWIDDOCTO )
as NRODOCTOS,



fC5_Divide(
sum( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ),
round(sum( round(( V.QTDITEM - V.QTDDEVOLITEM ) / K.QTDEMBALAGEM , 6) * ( nvl( a.propqtdprodutobase, 1 )) ),4)
) 
as VLRUNITARIO,



sum( V.VLREMBDESCRESSARCST- V.VLREMBDESCRESSARCSTDEVOL )
as VLREMBDESCRESSARCST,

sum( (
( case when 'N' in ( 'V' ) then
 V.VLRITEMSEMDESC
 else V.VLRITEM 
 end ) - VLRICMSST - VLRFCPST + case when 'N' not in ( 'V' ) then
 NVL( V.VLREMBDESCRESSARCST, 0 )
 when NVL( V.VLRDESCONTO, 0 ) = 0 then
 NVL( V.VLREMBDESCRESSARCST, 0 )
else 0 end - ( V.VLRDEVOLITEM - VLRDEVOLICMSST - DVLRFCPST + NVL( V.VLREMBDESCRESSARCSTDEVOL, 0 ) )) )
as VLRVENDARESSARCST,

to_number( null ) as VLRGMROI,

sum( V.VLRDESCCOMERCIAL )
as VLRDESCCOMERCIAL,

sum( V.VLRDESCITEM - V.VLRDESCDEVOLITEM )
as VLRDESCONTO,

to_number( null )
as PERCDESCONTO,

sum(VLRDESCMEDALHA)
as VLRDESCMEDALHA,

sum( V.VLRDESCFORNEC )
as VLRDESCFORNEC,

sum( ( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ) + nvl( VLREMBDESCRESSARCST, 0 ) - nvl( VLREMBDESCRESSARCSTDEVOL, 0 ) ) 
as VLRVENDALIQ,

SUM( coalesce(V.VLRVENDAPROMOC - case when V.VLRVENDAPROMOC > 0 then nvl(VLRDESCITEM,0) else 0 end, (decode( nvl( fmrl_seqpromocProd( A.SEQPRODUTO, Y.NROEMPRESA, NVL(V.DTANFREF,Y.DTAENTRADASAIDA), 
V.NROSEGMENTO, null ), 0 ), 0, 0, ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) 
))) )
as VLRVENDAPROMOC,

 round( decode( sum( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ), 0, to_number( null ),
fc5_divide( sum( V.NRODIASPRAZOMEDIO * ( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - decode ( nvl( V.NRODIASPRAZOMEDIO, 0 ), 0, 0, ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ) ) ), sum( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - decode ( nvl( V.NRODIASPRAZOMEDIO, 0 ), 0, 0, ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ) ) ) * case when sum( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ) > 0 then 1 else - 1 end ), 2 ) 
as NRODIASPRAZOMEDIO,

sum( round(( V.QTDITEM - V.QTDDEVOLITEM ) / K.QTDEMBALAGEM , 6) * ( nvl( a.propqtdprodutobase, 1 )) ) / count( distinct V.ROWIDDOCTO )
as MEDQTDDOCTO,

fC5_Divide(
 sum( round(( V.QTDITEM - V.QTDDEVOLITEM ) / K.QTDEMBALAGEM , 6) * ( nvl( a.propqtdprodutobase, 1 )) ),
 count( distinct V.SEQPESSOA ) 
)
as MEDQTDCLI,

fC5_Divide(
 sum( ( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ) + nvl( VLREMBDESCRESSARCST, 0 ) - nvl( VLREMBDESCRESSARCSTDEVOL, 0 ) ) ,
 count( distinct V.ROWIDDOCTO ) 
)
as MEDVLRDOCTO,

fC5_Divide(
 sum( ( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ) + nvl( VLREMBDESCRESSARCST, 0 ) - nvl( VLREMBDESCRESSARCSTDEVOL, 0 ) ) ,
 count( distinct V.SEQPESSOA ) 
)
as MEDVLRCLI,

null
as CTENRO,

null
as CTENRO,

null
as CTESERIE,

null
as CTESERIE,

null
as VLRITEMRATEIOCTE,

round( sum(
 fC5_AbcDistribLucratividade(
 'L',
 'L',
 'N',
 round( V.VLRITEM, 2 ) ,
 'S',
 V.VLRICMSST,
 V.VLRFCPST,
 V.VLRICMSSTEMPORIG,
 E.UF,
 V.UFPESSOA,
 'S',
 RE.VLRDESCREGRA, 
 'N',
 V.VLRIPIITEM,
 V.VLRIPIDEVOLITEM,
 'N',
 V.VLRDESCFORANF,
 Y.CMDIAVLRNF - 0 ,
 Y.CMDIAIPI,
 nvl( Y.CMDIACREDPIS, 0 ),
 nvl( Y.CMDIACREDCOFINS, 0 ),
 Y.CMDIAICMSST,
 Y.CMDIADESPNF,
 Y.CMDIADESPFORANF,
 Y.CMDIADCTOFORANF,
 'S',
 a.propqtdprodutobase,
 V.QTDITEM,
 V.VLREMBDESCRESSARCST,
 V.ACMCOMPRAVENDA,
 V.PISITEM,
 V.COFINSITEM,
 Y.QTDVDA,
 ( decode( V.TIPCGO, 'S', Y.VLRIMPOSTOVDA, Y.VLRIMPOSTODEVOL ) - nvl( Y.VLRIPIVDA, 0 ) ),
 'N',
 V.VLRDESPOPERACIONALITEM,
 Y.VLRDESPESAVDA,
 'N',
 nvl( Y.VLRVERBAVDAACR, 0 ),

 Y.QTDVERBAVDA,
 Y.VLRVERBAVDA - nvl( Y.VLRVERBAVDAINDEVIDA, 0 ),

 'N',
 NVL(V.VLRTOTCOMISSAOITEM, 0),
 V.VLRDEVOLITEM,
 VLRDEVOLICMSST,
 V.DVLRFCPST,
 V.QTDDEVOLITEM,
 V.PISDEVOLITEM,
 V.COFINSDEVOLITEM,
 V.VLRDESPOPERACIONALITEMDEVOL,
 V.VLRTOTCOMISSAOITEMDEVOL,
 E.PERIRLUCRAT,
 E.PERCSLLLUCRAT,
 Y.CMDIACREDICMS,
 decode( V.ICMSEFETIVOITEM, 0, V.ICMSITEM, V.ICMSEFETIVOITEM ),
 V.VLRFCPICMS,
 V.PERCPMF,
 V.PEROUTROIMPOSTO,
 decode( V.ICMSEFETIVODEVOLITEM, 0, V.ICMSDEVOLITEM, V.ICMSEFETIVODEVOLITEM ),
 V.DVLRFCPICMS, 
 case when ( 'S' ) = 'N' then
 (nvl(y.cmdiavlrdescpistransf,0) + nvl(y.cmdiavlrdesccofinstransf,0) + nvl(y.cmdiavlrdescicmstransf,0) +
 nvl(y.cmdiavlrdescipitransf,0) + nvl(y.cmdiavlrdesclucrotransf,0) + nvl(y.cmdiavlrdescverbatransf,0) )
 
 else 0
 end, 
 case when DV.UTILACRESCCUSTPRODRELAC = 'S' and nvl( A.SEQPRODUTOBASE, A.SEQPRODUTOBASEANTIGO ) is not null then
 coalesce( PR.PERCACRESCCUSTORELACVIG, nvl( F_RETACRESCCUSTORELACABC( V.SEQPRODUTO, V.DTAVDA ), 1 ) )
 else 1 
 end,
 'N',
 0,
 0,
 'S',
 V.VLRDESCMEDALHA,
 'S',
 V.VLRDESCFORNEC,
 V.VLRDESCFORNECDEVOL,
 'N',
 V.VLRFRETEITEMRATEIO,
 V.VLRFRETEITEMRATEIODEV,
 'S',
 V.VLRICMSSTEMBUTPROD,
 V.VLRICMSSTEMBUTPRODDEV,
 V.VLREMBDESCRESSARCSTDEVOL, 
 v.vlrdescacordoverbapdv,
 nvl( Y.CMDIACREDIPI, 0 ),
 NVL(V.VLRITEMRATEIOCTE,0),
 'N',
 'C'
 )
), 2 )
as VLRLUCRO,

to_number( null )
as MARGEMLUCRO,

to_number( null )
as MARGEMLUCROSVMI,

to_number( null )
as VLRLUCROVERBAPDV,

to_number( null )
as MARGEMLUCROVERBAPDV,

to_number( null )
as MARGEMLUCROVERBAPDVSVMI,

max(coalesce(VlrPrecoMargemZero, 0))
as VlrPrecoMargemZero,

null
as MARGEMCADASTRO,

null
as MARKUP,

to_number( null )
as MARKDOWN,

SUM(
 FC5_ABCDISTRIBCUSTOBRUTO(
 'L',
 'N',
 Y.CMDIAVLRNF - case when 'N' = 'S' then fc5_divide( fc5_divide( V.VLRDESCACORDOVERBAPDV, ( V.QTDITEM - V.QTDDEVOLITEM ) ), V.QTDEMBALITEM ) else 0 end, 
 Y.CMDIAIPI,
 Y.CMDIAICMSST,
 Y.CMDIADESPNF,
 Y.CMDIADESPFORANF,
 Y.CMDIADCTOFORANF - nvl( Y.CMULTIMPOSTOPRESUM, 0 ),
 Y.CMDIACREDICMS,
 'S',
 a.propqtdprodutobase,
 Y.QTDVERBAVDA,
 Y.VLRVERBAVDA,
 Y.QTDVDA,
 V.QTDITEM,
 V.QTDDEVOLITEM,
 case when ('S') = 'N' then
 (nvl(y.cmdiavlrdescpistransf,0) + nvl(y.cmdiavlrdesccofinstransf,0) + nvl(y.cmdiavlrdescicmstransf,0) +
 nvl(y.cmdiavlrdescipitransf,0) + nvl(y.cmdiavlrdesclucrotransf,0) + nvl(y.cmdiavlrdescverbatransf,0) + nvl(y.cmdiavlrdescdiferencatransf,0)) 
 else 0
 end , 
 nvl( Y.VLRVERBAVDAACR, 0 ),
 'N',

 ( CASE WHEN DV.UTILACRESCCUSTPRODRELAC = 'S' AND NVL(A.SEQPRODUTOBASE, A.SEQPRODUTOBASEANTIGO) IS NOT NULL THEN
 COALESCE(PR.PERCACRESCCUSTORELACVIG, NVL(F_RETACRESCCUSTORELACABC(V.SEQPRODUTO, V.DTAVDA),1))
 ELSE 
 1 
 END )

 ) 
) 
as CTOBRUTOVDA,

sum(NVL(Y.CMDIACREDICMS,0) *
 DECODE('S','N',1, NVL( a.propqtdprodutobase, 1) )
 *
 ( V.QTDITEM - V.QTDDEVOLITEM ) ) 
as CMDIACREDICMS,

sum(NVL(Y.CMDIACREDPIS,0) *
 DECODE('S','N',1, NVL( a.propqtdprodutobase, 1) )
 *
 ( V.QTDITEM - V.QTDDEVOLITEM ) ) 
as CMDIACREDPIS,

sum(NVL(Y.CMDIACREDCOFINS,0) *
 DECODE('S','N',1, NVL( a.propqtdprodutobase, 1) )
 *
 ( V.QTDITEM - V.QTDDEVOLITEM ) ) 
as CMDIACREDCOFINS,

round( sum(
 FC5_AbcDistribCustoMarkUPDown(
 'L',
 'N',
 case when 'N' = 'S' then nvl( Y.CMDIAVLRNFPRES, 0 ) else Y.CMDIAVLRNF end - 
 case when 'N' = 'S' then fc5_divide( fc5_divide( V.VLRDESCACORDOVERBAPDV, ( V.QTDITEM - V.QTDDEVOLITEM ) ), V.QTDEMBALITEM ) else 0 end,
 case when 'N' = 'S' then nvl( Y.CMDIAIPIPRES, 0 ) else Y.CMDIAIPI end,
 V.VLRICMSSTEMPORIG,
 E.UF,
 V.UFPESSOA,
 'S',
 case when 'N' = 'S' then nvl( Y.CMDIAICMSSTPRES, 0 ) else Y.CMDIAICMSST end,
 case when 'N' = 'S' then nvl( Y.CMDIADESPNFPRES, 0 ) else Y.CMDIADESPNF end,
 case when 'N' = 'S' then nvl( Y.CMDIADESPFORANFPRES, 0 ) else Y.CMDIADESPFORANF end,
 case when 'N' = 'S' then nvl( Y.CMDIADCTOFORANFPRES, 0 ) else Y.CMDIADCTOFORANF end - nvl( Y.CMULTIMPOSTOPRESUM, 0 ),
 case when 'N' = 'S' then nvl( Y.CMDIACREDICMSPRES, 0 ) else Y.CMDIACREDICMS end,
 'S',
 a.propqtdprodutobase,
 Y.QTDVERBAVDA,
 Y.VLRVERBAVDA,
 Y.QTDVDA,
 V.QTDITEM,
 V.QTDDEVOLITEM,
 case when ('S') = 'N' then
 (nvl(y.cmdiavlrdescpistransf,0) + nvl(y.cmdiavlrdesccofinstransf,0) + nvl(y.cmdiavlrdescicmstransf,0) +
 nvl(y.cmdiavlrdescipitransf,0) + nvl(y.cmdiavlrdesclucrotransf,0) + nvl(y.cmdiavlrdescverbatransf,0) + nvl(y.cmdiavlrdescdiferencatransf,0) ) 
 else 0
 end , nvl( Y.VLRVERBAVDAACR, 0 ),
 ( CASE WHEN DV.UTILACRESCCUSTPRODRELAC = 'S' AND NVL(A.SEQPRODUTOBASE, A.SEQPRODUTOBASEANTIGO) IS NOT NULL THEN
 COALESCE(PR.PERCACRESCCUSTORELACVIG, NVL(F_RETACRESCCUSTORELACABC(V.SEQPRODUTO, V.DTAVDA),1))
 ELSE 
 1 
 END )
 )
),2)
as CTOBRUTOMARKUPDOWN,

sum( ( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ) + nvl( VLREMBDESCRESSARCST, 0 ) - nvl( VLREMBDESCRESSARCSTDEVOL, 0 ) ) - sum( 0 ) 
as VLRTOTLIQMARKUPDOWN,

sum( (
case when nvl( 'N', 'N' ) = 'N' or nvl( V.VLRICMSSTEMPORIG, 0 ) <= 0 then
 ( case when 'N' in ( 'V' ) then
 V.VLRITEMSEMDESC
 else 
 V.VLRITEM end )
else
case when NVL(V.VLRICMSSTEMPORIG,0) - NVL(V.VLRICMSST,0) < 0
then (case when 'N' in ( 'V' ) then
V.VLRITEMSEMDESC
else V.VLRITEM end)
+ ABS(NVL(V.VLRICMSSTEMPORIG,0) - 0 )
else (case when 'N' in ( 'V' ) then
V.VLRITEMSEMDESC
else V.VLRITEM end )
- NVL(V.VLRICMSSTEMPORIG,0)
end
end - VLRICMSST - VLRFCPST - ( V.VLRDEVOLITEM - VLRDEVOLICMSST - DVLRFCPST )) )
as VLRVENDAMARKUPDOWN,

sum( 
( ( (Y.CMDIAVLRNF ) + Y.CMDIAIPI - Y.CMDIACREDICMS - nvl( Y.CMDIACREDPIS, 0 ) - nvl( Y.CMDIACREDCOFINS, 0 ) - nvl( Y.CMDIACREDIPI, 0 ) + Y.CMDIAICMSST + Y.CMDIADESPNF + Y.CMDIADESPFORANF - Y.CMDIADCTOFORANF ) 

*
 CASE WHEN DV.UTILACRESCCUSTPRODRELAC = 'S' AND NVL(A.SEQPRODUTOBASE, A.SEQPRODUTOBASEANTIGO) IS NOT NULL THEN 
 COALESCE(PR.PERCACRESCCUSTORELACVIG, NVL(F_RETACRESCCUSTORELACABC(V.SEQPRODUTO, V.DTAVDA), 1))
 ELSE 
 1
 END

*
DECODE('S', 'N', 1, NVL( a.propqtdprodutobase, 1) )
- ( decode( Y.QTDVERBAVDA, 0, 0, Y.VLRVERBAVDA * NVL( a.propqtdprodutobase, 1 ) /
 DECODE(NVL(Y.QTDVDA,0), 0, Y.QTDVERBAVDA, Y.QTDVDA) ) )
+ decode (V.ACMCOMPRAVENDA,'N', 0,
 decode( 'N', 'S', 0,
 ( decode( nvl( Y.VLRVERBAVDAACR, 0 ), 0, 0, Y.VLRVERBAVDAACR * NVL( a.propqtdprodutobase, 1 ) /
 DECODE(NVL(Y.QTDVDA,0), 0, 1, Y.QTDVDA) ) ) )
 ) )
 * (V.QTDITEM - V.QTDDEVOLITEM))
as VLRCTOLIQVDA,

0
as VLRCUSTONFPRECOCAMP,

sum((nvl( Y.CMDIACUSLIQPRECIFICACAOPRES, 0 )
- ( decode( Y.QTDVERBAVDA, 0, 0, Y.VLRVERBAVDA * NVL( a.propqtdprodutobase, 1 ) /
 DECODE(NVL(Y.QTDVDA,0), 0, Y.QTDVERBAVDA, Y.QTDVDA) ) )
+ decode (V.ACMCOMPRAVENDA,'N', 0,
 decode( 'N', 'S', 0,
 ( decode( nvl( Y.VLRVERBAVDAACR, 0 ), 0, 0, Y.VLRVERBAVDAACR * NVL( a.propqtdprodutobase, 1 ) /
 DECODE(NVL(Y.QTDVDA,0), 0, 1, Y.QTDVDA) ) ) )
 )) * (V.QTDITEM - V.QTDDEVOLITEM) ) 
as CMDIACUSLIQPRECIFICACAOPRES,

sum( 
( ( (Y.CMDIAVLRNF - case when 'N' = 'S'
 then fc5_divide( fc5_divide( V.VLRDESCACORDOVERBAPDV, ( V.QTDITEM - V.QTDDEVOLITEM ) ), V.QTDEMBALITEM )
 else 0
 end) + Y.CMDIAIPI- Y.CMDIACREDICMS- nvl( Y.CMDIACREDPIS, 0 ) - nvl( Y.CMDIACREDCOFINS, 0 ) - nvl( Y.CMDIACREDIPI, 0 ) + Y.CMDIAICMSST + Y.CMDIADESPNF + Y.CMDIADESPFORANF - Y.CMDIADCTOFORANF ) 

*
 CASE WHEN DV.UTILACRESCCUSTPRODRELAC = 'S' AND NVL(A.SEQPRODUTOBASE, A.SEQPRODUTOBASEANTIGO) IS NOT NULL THEN 
 COALESCE(PR.PERCACRESCCUSTORELACVIG, NVL(F_RETACRESCCUSTORELACABC(V.SEQPRODUTO, V.DTAVDA), 1))
 ELSE 
 1
 END

*
DECODE('S', 'N', 1, NVL( a.propqtdprodutobase, 1) )
- ( decode( Y.QTDVERBAVDA, 0, 0, Y.VLRVERBAVDA * NVL( a.propqtdprodutobase, 1 ) /
 DECODE(NVL(Y.QTDVDA,0), 0, Y.QTDVERBAVDA, Y.QTDVDA) ) )
+ decode (V.ACMCOMPRAVENDA,'N', 0,
 decode( 'N', 'S', 0,
 ( decode( nvl( Y.VLRVERBAVDAACR, 0 ), 0, 0, Y.VLRVERBAVDAACR * NVL( a.propqtdprodutobase, 1 ) /
 DECODE(NVL(Y.QTDVDA,0), 0, 1, Y.QTDVDA) ) ) )
 ) )
 * (V.QTDITEM - V.QTDDEVOLITEM))
as CMDIACUSLIQCOMERCIALPRES,

to_number( null )
as CTOBRUTOVDAPROD,

to_number( null )
as VLRCTOLIQVDAPROD,

sum(
( ( ( Y.CMDIAVLRNF + Y.CMDIAIPI- nvl( Y.CMDIACREDPIS, 0 ) - nvl( Y.CMDIACREDCOFINS, 0 )- nvl( Y.CMDIACREDIPI, 0) + Y.CMDIAICMSST + Y.CMDIADESPNF + Y.CMDIADESPFORANF - Y.CMDIADCTOFORANF ) 

* CASE WHEN DV.UTILACRESCCUSTPRODRELAC = 'S' AND NVL(A.SEQPRODUTOBASE, A.SEQPRODUTOBASEANTIGO) IS NOT NULL THEN
 COALESCE(PR.PERCACRESCCUSTORELACVIG, NVL(F_RETACRESCCUSTORELACABC(V.SEQPRODUTO, V.DTAVDA),1))
 ELSE 
 1 
 END )

* 
DECODE('S','N',1, NVL( a.propqtdprodutobase, 1) ) 
- ( decode( Y.QTDVERBAVDA, 0, 0, Y.VLRVERBAVDA * NVL( a.propqtdprodutobase, 1 ) / DECODE(NVL(Y.QTDVDA,0),0,Y.QTDVERBAVDA,Y.QTDVDA) ) ) 
+ decode (V.ACMCOMPRAVENDA,'N', 0,
 decode( 'N', 'S', 0,
 ( decode( nvl( Y.VLRVERBAVDAACR, 0 ), 0, 0, Y.VLRVERBAVDAACR * NVL( a.propqtdprodutobase, 1 ) /
 DECODE(NVL(Y.QTDVDA,0), 0, 1, Y.QTDVDA) ) ) )
 ) )
* ( V.QTDITEM - V.QTDDEVOLITEM )
) 
as VLRCUSTOEXTRA,

sum(
( decode( V.ACMCOMPRAVENDA, 'N', 0, nvl( V.VLRDESPOPERACIONALITEM, ( decode( Y.QTDVDA * V.QTDITEM, 0, 0, Y.VLRDESPESAVDA * 
DECODE('S','N',1, NVL( a.propqtdprodutobase, 1) ) / Y.QTDVDA * V.QTDITEM ) ) ) ) )
- ( nvl( V.VLRDESPOPERACIONALITEMDEVOL, ( decode( Y.QTDVDA * V.QTDDEVOLITEM, 0, 0, Y.VLRDESPESAVDA * 
DECODE('S','N',1, NVL( a.propqtdprodutobase, 1) ) / Y.QTDVDA * V.QTDDEVOLITEM ) ) ) )
) 
as VLRDESPESAVDA,

sum(nvl( Y.CMDIAVLRCOMPROR, 0 ) * V.QTDITEM)
as VLRCOMPROR,

sum( V.VLRTOTCOMISSAOITEM - V.VLRTOTCOMISSAOITEMDEVOL ) 
as VLRCOMISSAOVDA,

sum( nvl( V.VLRTOTCOMISSAOTELE, 0 ) )
as VLRTOTCOMISSAOTELE,

ROUND(sum(
decode( V.ACMCOMPRAVENDA, 'I', ( V.VLRITEM - VLRICMSST - VLRFCPST * ( V.PERCPMF + V.PEROUTROIMPOSTO ) / 100 ), 
 decode( Y.QTDVDA * V.QTDITEM, 0, 0, ( Y.VLRIMPOSTOVDA - nvl( Y.VLRIPIVDA, 0 ) ) * DECODE('S','N',1, NVL( a.propqtdprodutobase, 1) ) / Y.QTDVDA * V.QTDITEM ) )
- decode( V.ACMCOMPRAVENDA, 'I', ( V.VLRDEVOLITEM - VLRDEVOLICMSST - DVLRFCPST * ( V.PERCPMF + V.PEROUTROIMPOSTO ) / 100 ), 
 decode( Y.QTDVDA * V.QTDDEVOLITEM, 0, 0, ( Y.VLRIMPOSTODEVOL - nvl( Y.VLRIPIVDA, 0 ) ) * DECODE('S','N',1, NVL( a.propqtdprodutobase, 1) ) / Y.QTDVDA * V.QTDDEVOLITEM ) )
+ decode( V.ACMCOMPRAVENDA, 'I', 0, 
 decode( V.ICMSEFETIVOITEM, 0, V.ICMSITEM, V.ICMSEFETIVOITEM ) 
 + V.VLRFCPICMS + V.PISITEM + V.COFINSITEM - 
 decode( V.ICMSEFETIVODEVOLITEM, 0, V.ICMSDEVOLITEM, V.ICMSEFETIVODEVOLITEM ) 
 - V.DVLRFCPICMS - V.PISDEVOLITEM - V.COFINSDEVOLITEM 
 )
),2) 
as VLRIMPOSTOVDA,

ROUND(SUM(
 FC5_ABCDISTRIBCONTRIB(
 'L',
 'L',
 'N',
 round(V.VLRITEM, 2) ,
 'S',
 V.VLRICMSST,
 V.VLRFCPST,
 V.VLRICMSSTEMPORIG,
 E.UF,
 V.UFPESSOA,
 'S',
 RE.VLRDESCREGRA, 
 'N',
 V.VLRIPIITEM,
 V.VLRIPIDEVOLITEM,
 'N',
 V.VLRDESCFORANF,
 Y.CMDIAVLRNF - 0 ,
 Y.CMDIAIPI ,
 nvl( Y.CMDIACREDPIS, 0 ) ,
 nvl( Y.CMDIACREDCOFINS, 0 ) ,
 Y.CMDIAICMSST,
 Y.CMDIADESPNF,
 Y.CMDIADESPFORANF,
 Y.CMDIADCTOFORANF,
 'S',
 a.propqtdprodutobase,
 V.QTDITEM,
 V.VLREMBDESCRESSARCST,
 V.ACMCOMPRAVENDA,
 V.PISITEM,
 V.COFINSITEM, 
 Y.QTDVDA,
 ( decode( V.TIPCGO, 'S', Y.VLRIMPOSTOVDA, Y.VLRIMPOSTODEVOL ) - nvl( Y.VLRIPIVDA, 0 ) ),
 'N',
 V.VLRDESPOPERACIONALITEM,
 Y.VLRDESPESAVDA,
 'N',
 nvl( Y.VLRVERBAVDAACR, 0 ),
 Y.QTDVERBAVDA,
 Y.VLRVERBAVDA - nvl( Y.VLRVERBAVDAINDEVIDA, 0 ),
 'N',
 NVL(V.VLRTOTCOMISSAOITEM, 0),
 V.VLRDEVOLITEM,
 VLRDEVOLICMSST,
 V.DVLRFCPST,
 V.QTDDEVOLITEM,
 V.PISDEVOLITEM,
 V.COFINSDEVOLITEM,
 V.VLRDESPOPERACIONALITEMDEVOL,
 V.VLRTOTCOMISSAOITEMDEVOL,
 E.PERIRLUCRAT,
 E.PERCSLLLUCRAT,
 Y.CMDIACREDICMS,
 decode( V.ICMSEFETIVOITEM, 0, V.ICMSITEM, V.ICMSEFETIVOITEM ),
 V.VLRFCPICMS,
 V.PERCPMF,
 V.PEROUTROIMPOSTO,
 decode( V.ICMSEFETIVODEVOLITEM, 0, V.ICMSDEVOLITEM, V.ICMSEFETIVODEVOLITEM ),
 V.DVLRFCPICMS, 
 case when ('S') = 'N' then
 (nvl(y.cmdiavlrdescpistransf,0) + nvl(y.cmdiavlrdesccofinstransf,0) + nvl(y.cmdiavlrdescicmstransf,0) +
 nvl(y.cmdiavlrdescipitransf,0) + nvl(y.cmdiavlrdesclucrotransf,0) + nvl(y.cmdiavlrdescverbatransf,0) )
 
 else 0
 end, 
 CASE WHEN DV.UTILACRESCCUSTPRODRELAC = 'S' AND NVL(A.SEQPRODUTOBASE, A.SEQPRODUTOBASEANTIGO) IS NOT NULL THEN
 COALESCE(PR.PERCACRESCCUSTORELACVIG, NVL(F_RETACRESCCUSTORELACABC(V.SEQPRODUTO, V.DTAVDA),1))
 ELSE 1 END,
 'N',
 0,
 0,
 'S',
 V.VLRDESCMEDALHA,
 'S',
 V.VLRDESCFORNEC,
 V.VLRDESCFORNECDEVOL,
 'N',
 V.VLRFRETEITEMRATEIO,
 V.VLRFRETEITEMRATEIODEV,
 'S',
 V.VLRICMSSTEMBUTPROD,
 V.VLRICMSSTEMBUTPRODDEV,
 V.VLREMBDESCRESSARCSTDEVOL, 
 v.vlrdescacordoverbapdv,
 nvl( Y.CMDIACREDIPI, 0 ),
 'N',
 'C'
 )
),2)
as VLRCONTRIB,

to_number( null )
as MARGEMCONTRIB,

null
as MARGEMCONTRIBSVMI,

sum( ( V.QTDITEM - V.QTDDEVOLITEM ) / K.QTDEMBALAGEM * K.PESOBRUTO ) 
as PESOBRUTO,

sum( ( V.QTDITEM - V.QTDDEVOLITEM ) / K.QTDEMBALAGEM * K.PESOLIQUIDO ) 
as PESOLIQUIDO,

round(sum( V.QTDITEM / K.QTDEMBALAGEM * ( (K.ALTURA * K.LARGURA * K.PROFUNDIDADE) / 1000000 ) )
+
sum( ( ( 0 - NVL(V.QTDDEVOLITEM,0) ) / K.QTDEMBALAGEM ) * ( (K.ALTURA * K.LARGURA * K.PROFUNDIDADE) / 1000000 ) ), 3)
as VOLUMEM3,

fc5_divide( ( sum( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) )),( round(sum( V.QTDITEM / K.QTDEMBALAGEM * ( (K.ALTURA * K.LARGURA * K.PROFUNDIDADE) / 1000000 ) )
+
sum( ( ( 0 - NVL(V.QTDDEVOLITEM,0) ) / K.QTDEMBALAGEM ) * ( (K.ALTURA * K.LARGURA * K.PROFUNDIDADE) / 1000000 ) ), 3) ), 0 )
as VLRVENDAPORM3,

sum( V.ICMSITEM - V.ICMSDEVOLITEM )
as VLRICMS,

sum( V.ICMSEFETIVOITEM - V.ICMSEFETIVODEVOLITEM )
as VLRICMSEFETIVO,

sum( V.VLRFCPICMS - V.DVLRFCPICMS )
as VLRFCP,

sum( ( V.VLRIPIITEM - V.VLRIPIDEVOLITEM ) )
as VLRIPI,

sum( ( V.PISITEM - V.PISDEVOLITEM ) )
as VLRPIS,

sum( ( V.COFINSITEM - V.COFINSDEVOLITEM ) )
as VLRCOFINS,

sum( ( V.ISSITEM - V.ISSDEVOLITEM ) )
as VLRISS,

sum( V.VLRDESCFORANF )
as VLRDESCFORANF,

 NVL(sum( V.VLRDESCVERBATRANSF ),0) 
as VLRDESCVERBATRANSF,

 NVL(sum( V.VLRDESCLUCROTRANSF ),0) 
as VLRDESCLUCROTRANSF,

sum( V.VLRFRETE )
as VLRFRETE,

sum(
( decode( Y.QTDVERBAVDA, 0, 0,
 ( Y.VLRVERBAVDA - nvl( Y.VLRverbaVDAindevida, 0 ) )
 * nvl( a.propqtdprodutobase, 1 )
 / Y.QTDVDA )
)
*
( V.QTDITEM - 0 ) 
) 
as VLRVERBAVDA,

sum(NVL(V.VLRVERBAVDASEMICUS, 0)) 
as RECOMPOSICAOMARGEM,

sum( ( V.VLRVERBACOMPRA - V.VLRVERBACOMPRADEV ) + ( V.VLRVERBABONIFINCID - V.VLRVERBABONIFINCIDDEV ) + ( V.VLRVERBABONIFSEMINCID - V.VLRVERBABONIFSEMINCIDDEV ) )
as VLRVERBASELLIN,

to_number( null )
as VLRVERBAPDV,

0
as PERALQIPIENTRADA ,

0
as PERALQIPISAIDA,

MAX( ROUND( V.CUSTOFISCALUNIT, 4 ) )
as CUSTOFISCALUNIT,

MAX( ROUND( V.CUSTOFISCALTOTAL, 4 ) )
as CUSTOFISCALTOTAL,

round( sum( V.CUSTOFISCALUNIT * ( V.QTDITEM - V.QTDDEVOLITEM ) ), 2 ) 
as CUSTOFISCALTOTALVDA,

 sum( round( nvl( Y.CMDIAVLRDESPFIXA, 0 ), 6) * round ( ( V.QTDITEM - V.QTDDEVOLITEM ), 6) ) 
as VLRDESPFIXA,

 sum( round( nvl( Y.CMDIAVLRDESCFIXO, 0 ), 6) * round ( ( V.QTDITEM - V.QTDDEVOLITEM ), 6) ) 
as VLRDESCFIXO,

to_number( null ) as QTDDOTZNORMAL,

to_number( null ) as VLRVENDADOTZNORMAL,

to_number( null ) as QTDDOTZEXTRA,

to_number( null ) as VLRVENDADOTZEXTRA,

to_number( null ) as QTDDOTZTOTAL,

to_number( null ) as VLRVENDADOTZTOTAL,

SUM(NVL(VLRDIFCAMPANHAPRECO,0))
as VLRDIFCAMPANHAPRECO,

SUM(NVL(VLRDIFCAMPANHAPRECODEVOL,0))
as VLRDIFCAMPANHAPRECODEVOL,

sum( ( ( round( V.VLRITEM, 2 ) - VLRICMSST - VLRFCPST ) - ( round( V.VLRDEVOLITEM, 2 ) - ( 0 + VLRDEVOLICMSST + DVLRFCPST ) ) ) + NVL(V.VLRDESCFORNEC,0) + NVL(V.VLRDESCMEDALHA,0) + nvl( VLREMBDESCRESSARCST, 0 ) - nvl( VLREMBDESCRESSARCSTDEVOL, 0 ) ) - sum( 0 ) 
as VLRTOTLIQMARGEM,

NULL
as clnCustom1,

NULL
as clnCustom2,

NULL
as clnCustom3,

NULL
as clnCustom4,

NULL
as clsCustom5,

NULL
as clsCustom6,

NULL
as clsCustom7,

NULL
as clsCustom8
*/
  from MAXV_ABCDISTRIBBASE      V,
       MRL_CUSTODIAFAM          Y,
       MAP_PRODUTO              A,
       MAP_PRODUTO              PB,
       MAP_FAMDIVISAO           D,
       MAP_FAMEMBALAGEM         K,
       MAX_EMPRESA              E,
       MAX_DIVISAO              DV,
       MAP_PRODACRESCCUSTORELAC PR,
       MRLV_DESCONTOREGRA       RE
 where D.SEQFAMILIA = A.SEQFAMILIA
   and D.NRODIVISAO = V.NRODIVISAO
   and V.SEQPRODUTO = A.SEQPRODUTO
   and V.SEQPRODUTOCUSTO = PB.SEQPRODUTO
   and V.NROEMPRESA = :NR1
   and V.NROSEGMENTO in (1, 6, 5, 4, 9, 7, 10, 8, 3)
   and V.NRODIVISAO = D.NRODIVISAO
   and E.NROEMPRESA = V.NROEMPRESA
   and E.NRODIVISAO = DV.NRODIVISAO
   AND V.SEQPRODUTO = PR.SEQPRODUTO(+)
   AND V.DTAVDA = PR.DTAMOVIMENTACAO(+)
   and V.DTAVDA between :DT1 and :DT2
   and Y.NROEMPRESA = nvl(E.NROEMPCUSTOABC, E.NROEMPRESA)
   and Y.DTAENTRADASAIDA = V.DTAVDA
   and K.SEQFAMILIA = A.SEQFAMILIA
   and K.QTDEMBALAGEM = 1
   AND V.SEQPRODUTO = RE.SEQPRODUTO(+)
   AND V.DTAVDA = RE.DATAFATURAMENTO(+)
   AND V.NRODOCTO = RE.NUMERODF(+)
   AND V.SERIEDOCTO = RE.SERIEDF(+)
   AND V.NROEMPRESA = RE.NROEMPRESA(+)
   and Y.SEQFAMILIA = PB.SEQFAMILIA
      
   and DECODE(V.TIPTABELA, 'S', V.CGOACMCOMPRAVENDA, V.ACMCOMPRAVENDA) in
       ('S', 'I')
   and V.SEQPESSOA not in (1, 22401)
   and D.SEQCOMPRADOR not in (8, 11)

 group by A.SEQPRODUTO,
          A.DESCCOMPLETA,
          A.SEQPRODUTO,
          A.DESCCOMPLETA,
          A.DESCCOMPLETA,
          to_number(null),
          K.QTDEMBALAGEM,
          K.EMBALAGEM || ' ' || K.QTDEMBALAGEM,
          K.LITROS,
          A.SEQFAMILIA,
          V.nrorepresentante
